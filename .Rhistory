## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(cache_M = matrix()) {
inverted.cache_M <- NULL   # Initialize
set <- function(x) {
cache_M <<- x
inverted.cache_M <<- NULL
}
# Functions for getting and setting cached inv. matrix value
get <- function() cache_M
# Set Inverse of matrix
set.inverse <- function(inverse.x) inverted.cache_M <<- inverse.x
# Get inverse of matrix
get.inverse <- function() inverted.cache_M
list(
set = set,
get = get,
set.inverse = set.inverse,
get.inverse = get.inverse)
}
## Write a short comment describing this function
cacheSolve <- function(cs, ...) {
inverted.cache_M <- cs$get.inverse()
# Do we have cached matrix available?
if(!is.null(inverted.cache_M)) {
message("Getting cached inverse matrix")
return(inverted.cache_M)
}
# if there's no cached, get matrix available.
matrix.to.inverse <- cs$get()
inverted.cache_M <- inverse.x(matrix.to.inverse)
cs$set.inverse(inverted.cache_M)
inverted.cache_M
}
